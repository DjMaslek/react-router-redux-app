{"version":3,"sources":["component/News.js","actions/NewsActions.js","containers/NewsContainer.js","component/Login.js","actions/LoginActions.js","containers/LoginContainer.js","component/Profile.js","actions/ProfileActions.js","containers/ProfileContainer.js","component/Status.js","containers/StatusContainer.js","component/Home.js","App.js","reducers/login.js","reducers/profile.js","reducers/news.js","reducers/index.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["News","getNews","this","props","console","log","isFetching","errorMsg","NewsTemplate","data","map","item","className","key","id","title","text","React","Component","GET_NEWS","GET_NEWS_SUCCESS","GET_NEWS_FAILURE","NewsContainer","news","withRouter","connect","store","dispatch","type","fetch","then","response","ok","json","error","status","payload","message","catch","err","Login","state","username","password","redirecting","onBtnClickHandler","e","preventDefault","handleLogin","email","setState","localStorage","setItem","handleNameChange","currentTarget","value","handlePassChange","renderTemplate","getItem","to","name","placeholder","onChange","disabled","onClick","LOG_IN","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT","LoginContainer","login","credentials","onSuccess","onFailure","params","success","failure","method","headers","body","JSON","stringify","Profile","getProfile","isLogg","profileTemplate","userId","city","languages","language","index","social","socials","href","link","label","GET_PROFILE","GET_PROFILE_SUCCESS","GET_PROFILE_FAILURE","ProfileContainer","profile","ProfileStatus","handleLogOutClick","logOut","isLogged","StatusContainer","removeItem","window","location","reload","Home","NotFoundPage","App","path","exact","initialState","rootReducer","combineReducers","action","createStore","applyMiddleware","thunk","logger","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.092fdea9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport class News extends React.Component {\r\n  componentDidMount() {\r\n    const { getNews } = this.props;\r\n    getNews();\r\n    console.log();\r\n  }\r\n\r\n  render() {\r\n    const { isFetching, errorMsg } = this.props;\r\n    let data = this.props.data || {};\r\n    let NewsTemplate = data.map(function(item) {\r\n      return (\r\n        <div className=\"news-block\" key={item.id}>\r\n          <h3>{item.title}</h3>\r\n          <p>{item.text}</p>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"news\">\r\n        <h2 className=\"header\">News</h2>\r\n        {isFetching ? <p>Loading...</p> : NewsTemplate}\r\n        {errorMsg && <p className=\"err\">{errorMsg}</p>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const GET_NEWS = \"GET_NEWS\";\r\nexport const GET_NEWS_SUCCESS = \"GET_NEWS_SUCCESS\";\r\nexport const GET_NEWS_FAILURE = \"GET_NEWS_FAILURE\";\r\n\r\nexport function getNews() {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: GET_NEWS\r\n    });\r\n\r\n    fetch(`https://mysterious-reef-29460.herokuapp.com/api/v1/news `)\r\n      .then(\r\n        response => {\r\n          if (!response.ok) {\r\n            throw response;\r\n          }\r\n          return response.json();\r\n        },\r\n        error => {\r\n          console.log(\"An error occurred.\", error);\r\n        }\r\n      )\r\n      .then(json => {\r\n        if (json.status === \"err\") {\r\n          dispatch({\r\n            type: GET_NEWS_FAILURE,\r\n            payload: {\r\n              errorMsg: json.message\r\n            },\r\n            error: true\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: GET_NEWS_SUCCESS,\r\n            payload: json\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        dispatch({\r\n          type: GET_NEWS_FAILURE,\r\n          payload: {\r\n            errorMsg: \"An error occurred\"\r\n          },\r\n          error: true\r\n        });\r\n      });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { News } from \"../component/News\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getNews } from \"../actions/NewsActions\";\r\n\r\nclass NewsContainer extends React.Component {\r\n  render() {\r\n    const { news, getNews } = this.props;\r\n    return (\r\n      <News\r\n        getNews={getNews}\r\n        data={news.data}\r\n        isFetching={news.isFetching}\r\n        errorMsg={news.errorMsg}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    news: store.news\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getNews: () => dispatch(getNews())\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(NewsContainer)\r\n);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport class Login extends React.Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    redirecting: false\r\n  };\r\n\r\n  onBtnClickHandler = e => {\r\n    e.preventDefault();\r\n    const { username, password } = this.state;\r\n    this.props.handleLogin(\r\n      {\r\n        email: username,\r\n        password: password\r\n      },\r\n      () => {\r\n        this.setState({ redirecting: true });\r\n        localStorage.setItem(\"isLogged\", true);\r\n      },\r\n      () => {\r\n        this.setState({\r\n          username: \"\",\r\n          password: \"\"\r\n        });\r\n      }\r\n    );\r\n  };\r\n  handleNameChange = e => {\r\n    this.setState({ username: e.currentTarget.value });\r\n  };\r\n  handlePassChange = e => {\r\n    this.setState({ password: e.currentTarget.value });\r\n  };\r\n\r\n  renderTemplate = () => {};\r\n\r\n  render() {\r\n    const { username, password } = this.state;\r\n    const { errorMsg, isFetching } = this.props;\r\n    const isLogg = localStorage.getItem(\"isLogged\");\r\n    if (isLogg) {\r\n      return <Redirect to=\"/profile\" />;\r\n    }\r\n\r\n    return (\r\n      <form className=\"login-form\">\r\n        <input\r\n          type=\"email\"\r\n          name=\"username\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={this.handleNameChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"pass\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={this.handlePassChange}\r\n        />\r\n        {isFetching ? (\r\n          <button className=\"login-btn\" disabled=\"disbled\">\r\n            Loading...\r\n          </button>\r\n        ) : (\r\n          <button className=\"login-btn\" onClick={this.onBtnClickHandler}>\r\n            Log in\r\n          </button>\r\n        )}\r\n        {/* <button className=\"login-btn\" onClick={this.onBtnClickHandler}>\r\n          Log in\r\n        </button> */}\r\n        {errorMsg && <p className=\"err\">{errorMsg}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","export const LOG_IN = \"LOG_IN\";\r\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\r\nexport const LOG_OUT = \"LOG_OUT\";\r\n\r\nexport function handleLogin(params, success, failure) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: LOG_IN\r\n    });\r\n\r\n    fetch(\"https://mysterious-reef-29460.herokuapp.com/api/v1/validate\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\"\r\n      },\r\n      body: JSON.stringify(params)\r\n    })\r\n      .then(\r\n        response => {\r\n          if (!response.ok) {\r\n            throw response;\r\n          }\r\n          return response.json();\r\n        },\r\n        error => {\r\n          console.log(\"An error occurred.\", error);\r\n        }\r\n      )\r\n      .then(json => {\r\n        if (json.status === \"err\") {\r\n          failure();\r\n          dispatch({\r\n            type: LOG_IN_FAILURE,\r\n            payload: {\r\n              errorMsg: \"The username or password you entered is incorrect\"\r\n            },\r\n            error: true\r\n          });\r\n        } else {\r\n          success();\r\n          dispatch({\r\n            type: LOG_IN_SUCCESS,\r\n            payload: json\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        dispatch({\r\n          type: LOG_IN_FAILURE,\r\n          payload: {\r\n            errorMsg: \"An error occurred\"\r\n          },\r\n          error: true\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function logOut() {\r\n  return dispatch => {\r\n    localStorage.removeItem(\"isLogged\");\r\n    dispatch({\r\n      type: LOG_OUT\r\n    });\r\n    window.location.reload();\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Login } from \"../component/Login\";\r\nimport { handleLogin } from \"../actions/LoginActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass LoginContainer extends React.Component {\r\n  render() {\r\n    const { login, handleLogin } = this.props;\r\n    return (\r\n      <Login\r\n        errorMsg={login.errorMsg}\r\n        handleLogin={handleLogin}\r\n        isFetching={login.isFetching}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    login: store.login\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleLogin: (credentials, onSuccess, onFailure) =>\r\n      dispatch(handleLogin(credentials, onSuccess, onFailure))\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(LoginContainer)\r\n);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport class Profile extends React.Component {\r\n  componentDidMount() {\r\n    const { getProfile } = this.props;\r\n    getProfile();\r\n    console.log();\r\n  }\r\n\r\n  render() {\r\n    const { isFetching, errorMsg } = this.props;\r\n    let data = this.props.data || {};\r\n    const isLogg = localStorage.getItem(\"isLogged\");\r\n    let profileTemplate = data.map(function(item) {\r\n      return (\r\n        <div key={item.userId}>\r\n          <h3>City:</h3>\r\n          <p>{item.city}</p>\r\n          <div>\r\n            <h3>Languages: </h3>\r\n            {item.languages.map(function(language, index) {\r\n              return <p key={index}>{language}</p>;\r\n            })}\r\n          </div>\r\n          <div>\r\n            <h3>Socials:</h3>\r\n            {item.social.map(function(socials, index) {\r\n              return (\r\n                <p key={index}>\r\n                  <a href={socials.link}>\r\n                    <i className={socials.label + \"-ico icon\"}></i>\r\n                  </a>\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    if (!isLogg) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"profile\">\r\n        <h2 className=\"header\">Profile</h2>\r\n        {isFetching ? <p>Loading...</p> : profileTemplate}\r\n        {errorMsg && <p className=\"err\">{errorMsg}</p>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const GET_PROFILE = \"GET_PROFILE\";\r\nexport const GET_PROFILE_SUCCESS = \"GET_PROFILE_SUCCESS\";\r\nexport const GET_PROFILE_FAILURE = \"GET_PROFILE_FAILURE\";\r\n\r\nexport function getProfile() {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: GET_PROFILE\r\n    });\r\n\r\n    fetch(`https://mysterious-reef-29460.herokuapp.com/api/v1/user-info/1`)\r\n      .then(\r\n        response => {\r\n          if (!response.ok) {\r\n            throw response;\r\n          }\r\n          return response.json();\r\n        },\r\n        error => {\r\n          console.log(\"An error occurred.\", error);\r\n        }\r\n      )\r\n      .then(json => {\r\n        console.log(this);\r\n        console.log(\"OK\", json);\r\n        if (json.status === \"err\") {\r\n          dispatch({\r\n            type: GET_PROFILE_FAILURE,\r\n            payload: {\r\n              errorMsg: json.message\r\n            },\r\n            error: true\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: GET_PROFILE_SUCCESS,\r\n            payload: json\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        dispatch({\r\n          type: GET_PROFILE_FAILURE,\r\n          payload: {\r\n            errorMsg: \"An error occurred\"\r\n          },\r\n          error: true\r\n        });\r\n      });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Profile } from \"../component/Profile\";\r\nimport { getProfile } from \"../actions/ProfileActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  render() {\r\n    const { profile, getProfile } = this.props;\r\n    return (\r\n      <Profile\r\n        getProfile={getProfile}\r\n        data={profile.data}\r\n        isFetching={profile.isFetching}\r\n        errorMsg={profile.errorMsg}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    profile: store.profile\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getProfile: () => dispatch(getProfile())\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(ProfileContainer)\r\n);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class ProfileStatus extends React.Component {\r\n  handleLogOutClick = () => {\r\n    const { logOut } = this.props;\r\n    logOut();\r\n  };\r\n  render() {\r\n    const isLogged = localStorage.getItem(\"isLogged\");\r\n    return (\r\n      <div className=\"profile-status\">\r\n        {isLogged ? (\r\n          <span className=\"status\" onClick={this.handleLogOutClick}>\r\n            Log out\r\n          </span>\r\n        ) : (\r\n          <Link to=\"/login\" className=\"status\">\r\n            Log in\r\n          </Link>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logOut } from \"../actions/LoginActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Status from \"../component/Status\";\r\n\r\nclass StatusContainer extends React.Component {\r\n  render() {\r\n    const { logOut } = this.props;\r\n    return <Status logOut={logOut} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    login: store.login\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logOut: () => dispatch(logOut())\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(StatusContainer)\r\n);\r\n","import React from \"react\";\r\n\r\nexport default class Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        <h2 className=\"header\">Home</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport NewsContainer from \"./containers/NewsContainer\";\nimport LoginContainer from \"./containers/LoginContainer\";\nimport ProfileContainer from \"./containers/ProfileContainer\";\nimport StatusContainer from \"./containers/StatusContainer\";\nimport Home from \"./component/Home\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <nav className=\"navigation\">\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/news\">News</Link>\n              </li>\n              <li>\n                <Link to=\"/profile\">Profile</Link>\n              </li>\n            </ul>\n          </nav>\n\n          <StatusContainer />\n\n          <Switch>\n            <Route path=\"/news\">\n              <NewsContainer />\n            </Route>\n            <Route path=\"/login\">\n              <LoginContainer />\n            </Route>\n            <Route path=\"/profile\">\n              <ProfileContainer />\n            </Route>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"*\">\n              <NotFoundPage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\nfunction NotFoundPage() {\n  return <h2 className=\"header\">NotFound</h2>;\n}\n\n/* const mapStateToProps = store => {\n  console.log(store);\n  return {\n    login: store.login,\n    profile: store.profile\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleLoginAction: (credentials, onSuccess, onFailure) =>\n      dispatch(handleLogin(credentials, onSuccess, onFailure)),\n    getProfileAction: () => dispatch(getProfile())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n */\nexport default App;\n","import {\r\n  LOG_IN,\r\n  LOG_OUT,\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_SUCCESS\r\n} from \"../actions/LoginActions\";\r\n\r\nconst initialState = {\r\n  userId: null,\r\n  errorMsg: \"\",\r\n  isFetching: false\r\n};\r\n\r\nexport function loginReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOG_IN:\r\n      return {\r\n        ...state,\r\n        isFetching: true\r\n      };\r\n    case LOG_OUT:\r\n      return {\r\n        ...state,\r\n        userId: null,\r\n        errorMsg: \"\"\r\n      };\r\n    case LOG_IN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userId: action.payload.data.id,\r\n        isFetching: false\r\n      };\r\n    case LOG_IN_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        errorMsg: action.payload.errorMsg\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILE,\r\n  GET_PROFILE_SUCCESS,\r\n  GET_PROFILE_FAILURE\r\n} from \"../actions/ProfileActions\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  isFetching: false,\r\n  errorMsg: \"\"\r\n};\r\nexport function profileReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROFILE:\r\n      return {\r\n        ...state,\r\n        isFetching: true\r\n      };\r\n    case GET_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: [action.payload.data],\r\n        isFetching: false\r\n      };\r\n    case GET_PROFILE_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        errorMsg: action.payload.errorMsg\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_NEWS,\r\n  GET_NEWS_FAILURE,\r\n  GET_NEWS_SUCCESS\r\n} from \"../actions/NewsActions\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  isFetching: false,\r\n  errorMsg: \"\"\r\n};\r\n\r\nexport function newsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_NEWS:\r\n      return {\r\n        ...state,\r\n        isFetching: true\r\n      };\r\n    case GET_NEWS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n        isFetching: false\r\n      };\r\n    case GET_NEWS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        errorMsg: action.payload.errorMsg\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { loginReducer } from \"./login\";\r\nimport { profileReducer } from \"./profile\";\r\nimport { newsReducer } from \"./news\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  login: loginReducer,\r\n  profile: profileReducer,\r\n  news: newsReducer\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"../reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger));\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./store/configureStore\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}